import{_ as r,r as i,o as a,c,a as e,b as t,d as o,e as s}from"./app-BzCVkCfX.js";const l={},p=s('<div class="hint-container info"><p class="hint-container-title">Info</p><p>Nginx的反向代理、负载均衡和跨域</p></div><h2 id="深入理解反向代理" tabindex="-1"><a class="header-anchor" href="#深入理解反向代理"><span>深入理解反向代理</span></a></h2><p><code>正向代理</code> : 以VPN为例，客户端把网页请求，代理到一个可以访问应用服务器的代理服务器上，应用服务器响应代理服务器的请求，代理服务器把响应到的网页内容转发给客户端，而应用服务器不知道客户端的ip地址，而客户端既知道代理服务器的ip地址也知道应用服务器的地址</p><div class="photo" style="zoom:40%;text-align:center;"><img src="https://pic.imgdb.cn/item/662ceab40ea9cb1403f9532c.png"></div><p>正向代理和反向代理的区别：正向代理代理的是<code>客户端</code> 反向代理代理的是<code>服务端</code></p><p><code>反向代理</code>：代理服务器根据客户端的请求，从后台服务器上获取这些资源，然后再把这些资源返回给客户端的过程，客户端只知道代理服务器的ip地址而不知道后台服务器集群的地址，从而保障应用服务器的安全同时实现负载均衡和跨域</p><div class="photo" style="zoom:40%;text-align:center;"><img src="https://pic.imgdb.cn/item/662ceab10ea9cb1403f94734.png"></div>',7),h={href:"https://zhuanlan.zhihu.com/p/464965616",target:"_blank",rel:"noopener noreferrer"},d={href:"https://zhuanlan.zhihu.com/p/34943332",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.bilibili.com/video/BV1vm4y1z7EB?vd_source=67a29e4daedb51b6fbc5a6d3634ecf91",target:"_blank",rel:"noopener noreferrer"},g=e("h2",{id:"负载均衡和跨域",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#负载均衡和跨域"},[e("span",null,"负载均衡和跨域")])],-1),_=e("p",null,[e("code",null,"跨域"),t("："),e("strong",null,"跨域"),t("，指的是浏览器不能执行其他网站的脚本。它是由浏览器的同源策略造成的，是浏览器施加的安全限制。所谓同源是指，域名，协议，端口**均相同，只要有一个不同，就是跨域 举例说明：")],-1),u=e("blockquote",null,[e("p",null,"http://www.123.com/index.html 调用 http://www.123.com/server.php （非跨域） http://www.123.com/index.html 调用 http://www.456.com/server.php （主域名不同:123/456，跨域） http://abc.123.com/index.html 调用 http://def.123.com/server.php （子域名不同:abc/def，跨域） http://www.123.com:8080/index.html 调用 http://www.123.com:8081/server.php （端口不同:8080/8081，跨域） http://www.123.com/index.html 调用 https://www.123.com/server.php （协议不同:http/https，跨域） 请注意：localhost和127.0.0.1虽然都指向本机，但也属于跨域。")],-1),x={href:"https://cloud.tencent.com/developer/article/2070976",target:"_blank",rel:"noopener noreferrer"},f={href:"https://blog.csdn.net/qq_38628046/article/details/114853652",target:"_blank",rel:"noopener noreferrer"},b=e("p",null,[e("code",null,"负载均衡"),t(": 当业务量特别大的时候，有多台应用服务器集群，当客户端向代理服务器发送请求时，代理服务器会将此请求转发给可用的服务器，而转发是根据负载均衡的算法实现，包括 轮询、加权轮询、IP哈希 其他算法（URL_bash、最小连接数）Nginx带有健康检查，会定期轮询向集群里的服务器发送健康检查请求，当发现某台服务器异常，就不会发送请求给这台服务，提升了客户端访问的稳定性")],-1),w=e("div",{class:"photo",style:{zoom:"40%","text-align":"center"}},[e("img",{src:"https://pic.imgdb.cn/item/662ceaab0ea9cb1403f936a3.png"})],-1),y={href:"https://zhuanlan.zhihu.com/p/134220193",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.nginx.com/resources/glossary/load-balancing/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://blog.csdn.net/zpf1813763637/article/details/109455451",target:"_blank",rel:"noopener noreferrer"},N=e("h2",{id:"nginx的架构",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#nginx的架构"},[e("span",null,"Nginx的架构")])],-1),z=e("p",null,"当Nginx启动之后，后台会运行一个master进程和多个worker进程，master进程主要用于管理所有的worker进程，多个worker进程会去竞争客户端的请求，一个请求只能被一个worker进程处理，worker进程在配置文件中进行设置（通常，worker进程个数和CPU核心数一致）。当master进程收到信号，例如重启Nginx，这时master进程会重新加载配置文件，启动新的worker进程，对所有旧的worker进程发送信号使其不再处理请求，新的worker进程启动后开始接受新的请求，注意旧的worker进程会在处理完当前正在处理的请求后才会退出工作。",-1),P=e("div",{class:"photo",style:{zoom:"40%","text-align":"center"}},[e("img",{src:"https://pic.imgdb.cn/item/662ceaae0ea9cb1403f93e64.png"})],-1);function T(V,I){const n=i("ExternalLinkIcon");return a(),c("div",null,[p,e("p",null,[t("额外的补充和说明可以参考这篇博文 "),e("a",h,[t("深入理解http反向代理"),o(n)]),t("、"),e("a",d,[t("8分钟带你深入浅出搞懂Nginx"),o(n)]),t("和视频 "),e("a",m,[t("关于Nginx反向代理"),o(n)]),t(",其中的例子都很形象")]),g,_,u,e("p",null,[t("浏览器执行javascript脚本时，会检查这个脚本属于哪个页面，如果不是同源页面，就不会被执行。 另外补充参考："),e("a",x,[t("什么是跨域及怎么解决跨域问题?"),o(n)]),t("、"),e("a",f,[t("彻底理解什么是跨域"),o(n)])]),b,w,e("p",null,[t("另外补充参考："),e("a",y,[t("五分钟看懂 Nginx 负载均衡"),o(n)]),t("、"),e("a",v,[t("什么是负载均衡？负载均衡器的工作原理"),o(n)]),t("、"),e("a",k,[t("nginx配置负载均衡"),o(n)])]),N,z,P])}const Z=r(l,[["render",T],["__file","nginxnote.html.vue"]]),q=JSON.parse('{"path":"/posts/frontend/nginx/nginxnote.html","title":"Nginx功能","lang":"en-US","frontmatter":{"title":"Nginx功能","author":"Passeur-高","date":"2024-04-27T00:00:00.000Z","star":true,"category":"-Nginx","tag":"-负载均衡 -跨域 -反向代理","article":true,"description":"Info Nginx的反向代理、负载均衡和跨域 深入理解反向代理 正向代理 : 以VPN为例，客户端把网页请求，代理到一个可以访问应用服务器的代理服务器上，应用服务器响应代理服务器的请求，代理服务器把响应到的网页内容转发给客户端，而应用服务器不知道客户端的ip地址，而客户端既知道代理服务器的ip地址也知道应用服务器的地址 正向代理和反向代理的区别：正向...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://nulizongyouhuibao.space/zh/posts/frontend/nginx/nginxnote.html"}],["meta",{"property":"og:url","content":"https://nulizongyouhuibao.space/posts/frontend/nginx/nginxnote.html"}],["meta",{"property":"og:site_name","content":"GaLaXy"}],["meta",{"property":"og:title","content":"Nginx功能"}],["meta",{"property":"og:description","content":"Info Nginx的反向代理、负载均衡和跨域 深入理解反向代理 正向代理 : 以VPN为例，客户端把网页请求，代理到一个可以访问应用服务器的代理服务器上，应用服务器响应代理服务器的请求，代理服务器把响应到的网页内容转发给客户端，而应用服务器不知道客户端的ip地址，而客户端既知道代理服务器的ip地址也知道应用服务器的地址 正向代理和反向代理的区别：正向..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-28T15:01:24.000Z"}],["meta",{"property":"article:author","content":"Passeur-高"}],["meta",{"property":"article:tag","content":"-负载均衡 -跨域 -反向代理"}],["meta",{"property":"article:published_time","content":"2024-04-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-28T15:01:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Nginx功能\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-27T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-28T15:01:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Passeur-高\\"}]}"],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://nulizongyouhuibao.space/rss.xml","title":"GaLaXy RSS Feed"}]]},"headers":[{"level":2,"title":"深入理解反向代理","slug":"深入理解反向代理","link":"#深入理解反向代理","children":[]},{"level":2,"title":"负载均衡和跨域","slug":"负载均衡和跨域","link":"#负载均衡和跨域","children":[]},{"level":2,"title":"Nginx的架构","slug":"nginx的架构","link":"#nginx的架构","children":[]}],"git":{"createdTime":1714316484000,"updatedTime":1714316484000,"contributors":[{"name":"Ght-139","email":"ght139439@qq.com","commits":1}]},"readingTime":{"minutes":3.52,"words":1056},"filePathRelative":"posts/frontend/nginx/nginxnote.md","localizedDate":"April 27, 2024","excerpt":"<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">Info</p>\\n<p>Nginx的反向代理、负载均衡和跨域</p>\\n</div>\\n<h2>深入理解反向代理</h2>\\n<p><code>正向代理</code> : 以VPN为例，客户端把网页请求，代理到一个可以访问应用服务器的代理服务器上，应用服务器响应代理服务器的请求，代理服务器把响应到的网页内容转发给客户端，而应用服务器不知道客户端的ip地址，而客户端既知道代理服务器的ip地址也知道应用服务器的地址</p>\\n<div class=\\"photo\\" style=\\"zoom:40%;text-align:center\\">\\n  <img src=\\"https://pic.imgdb.cn/item/662ceab40ea9cb1403f9532c.png\\">\\n</div>","autoDesc":true}');export{Z as comp,q as data};
