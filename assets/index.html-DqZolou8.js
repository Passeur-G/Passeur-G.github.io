import{_ as o,o as n,c as a,a as e,b as t}from"./app-BzCVkCfX.js";const i={},r=e("div",{class:"hint-container important"},[e("p",{class:"hint-container-title"},"重要"),e("p",null,[t("HTTP协议是"),e("code",null,"无状态"),t("的协议。即对于事务处理没有记忆能力，每次客户端和服务端会话完成时，服务端不会保存任何会话信息:每个请求都是完全独立的，服务端无法确认当前访问者的身份信息，无法分辨上一次的请求发送者和这一次的发送者是不是同一个人。服务器与浏览器为了进行会话跟踪，维护一个登录状态，这个状态用于告诉服务端前后两个请求是否来自同一浏览器。实现这个状态就通过Cookie或Session、Token实现（核心概念---存储）")])],-1),s=e("p",null,"相关目录如下：",-1),c=[r,s];function p(l,d){return n(),a("div",null,c)}const h=o(i,[["render",p],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/zh/posts/frontend/nodeeles/","title":"Cookie的演化","lang":"zh-CN","frontmatter":{"title":"Cookie的演化","icon":"fa-solid fa-cookie","date":"2024-04-27T00:00:00.000Z","timeline":false,"article":false,"description":"重要 HTTP协议是无状态的协议。即对于事务处理没有记忆能力，每次客户端和服务端会话完成时，服务端不会保存任何会话信息:每个请求都是完全独立的，服务端无法确认当前访问者的身份信息，无法分辨上一次的请求发送者和这一次的发送者是不是同一个人。服务器与浏览器为了进行会话跟踪，维护一个登录状态，这个状态用于告诉服务端前后两个请求是否来自同一浏览器。实现这个状态...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://nulizongyouhuibao.space/posts/frontend/nodeeles/"}],["meta",{"property":"og:url","content":"https://nulizongyouhuibao.space/zh/posts/frontend/nodeeles/"}],["meta",{"property":"og:site_name","content":"GaLaXy"}],["meta",{"property":"og:title","content":"Cookie的演化"}],["meta",{"property":"og:description","content":"重要 HTTP协议是无状态的协议。即对于事务处理没有记忆能力，每次客户端和服务端会话完成时，服务端不会保存任何会话信息:每个请求都是完全独立的，服务端无法确认当前访问者的身份信息，无法分辨上一次的请求发送者和这一次的发送者是不是同一个人。服务器与浏览器为了进行会话跟踪，维护一个登录状态，这个状态用于告诉服务端前后两个请求是否来自同一浏览器。实现这个状态..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-28T15:01:24.000Z"}],["meta",{"property":"article:author","content":"Haitong Gao"}],["meta",{"property":"article:published_time","content":"2024-04-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-28T15:01:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Cookie的演化\\",\\"description\\":\\"重要 HTTP协议是无状态的协议。即对于事务处理没有记忆能力，每次客户端和服务端会话完成时，服务端不会保存任何会话信息:每个请求都是完全独立的，服务端无法确认当前访问者的身份信息，无法分辨上一次的请求发送者和这一次的发送者是不是同一个人。服务器与浏览器为了进行会话跟踪，维护一个登录状态，这个状态用于告诉服务端前后两个请求是否来自同一浏览器。实现这个状态...\\"}"],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://nulizongyouhuibao.space/zh/rss.xml","title":"GaLaXy RSS Feed"}]]},"headers":[],"git":{"createdTime":1714316484000,"updatedTime":1714316484000,"contributors":[{"name":"Ght-139","email":"ght139439@qq.com","commits":1}]},"readingTime":{"minutes":0.67,"words":201},"filePathRelative":"zh/posts/frontend/nodeeles/README.md","localizedDate":"2024年4月27日","excerpt":"<div class=\\"hint-container important\\">\\n<p class=\\"hint-container-title\\">重要</p>\\n<p>HTTP协议是<code>无状态</code>的协议。即对于事务处理没有记忆能力，每次客户端和服务端会话完成时，服务端不会保存任何会话信息:每个请求都是完全独立的，服务端无法确认当前访问者的身份信息，无法分辨上一次的请求发送者和这一次的发送者是不是同一个人。服务器与浏览器为了进行会话跟踪，维护一个登录状态，这个状态用于告诉服务端前后两个请求是否来自同一浏览器。实现这个状态就通过Cookie或Session、Token实现（核心概念---存储）</p>\\n</div>","autoDesc":true}');export{h as comp,u as data};
